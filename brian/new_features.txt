New features since 1.1.2
------------------------

* Added colormap option to StateMonitor.plot
* Added timed array module, see TimedArray class for details.
* Added optional progress reporting to run()
* New recall() function (converse to forget())
* Added progress reporting module (brian.utils.progressreporting)

New features since 1.1.1
------------------------

* Standard functions rand() and randn() can now be used in string resets.
* New forget() function.
* Major bugfix for STP

New features since 1.1.0
------------------------

* New statistical function: vector_strength
* Bugfix for one line string thresholds/resets

New features since 1.0.0
------------------------

* clear() function added for ipython users
* New DelayConnection for heterogeneous delays
* Short-term plasticity (Tsodyks-Markram model)
* Simplified initialisation of Connection objects
* Optional unit checking in NeuronGroup
* STDP
* New code for Connections, including new 'dynamic' connection matrix type
* Reset and threshold can be specified with strings (Python expressions)
* Spike train statistics (utils.statistics)
* Miscellaneous optimisations
* New MultiStateMonitor class
* New Group, MultiGroup objects (for convenience of people writing extensions mostly)
* Improved contained_objects protocol with ObjectContainer class in brian.base

New features since 1.0.0 rc5
----------------------------

* 2nd order Runge-Kutta method (use order=2)
* Quantity arrays are disabled (units only for scalars)
* brian_global_config added
* UserComputedConnectionMatrix and UserComputedSparseConnectionMatrix
* SimpleCustomRefractoriness, CustomRefractoriness

New features since 1.0.0 rc4
----------------------------

* Bugfix of sparse matrix problems
* Compiled version of spike propagation (much faster for
  networks with lots of spikes)
* Assorted small improvements

New features since 1.0.0 rc3
----------------------------

* Added StateSpikeMonitor
* Changed QuantityArray behaviour to work better with numpy, scipy and pylab

New features since 1.0.0 rc2
----------------------------

* Small bugfixes

New features since 1.0.0 rc1
----------------------------

* Documentation system now much better, using Sphinx, includes
  cross references, index, etc.
* Added VariableReset
* Added run_all_tests()
* numpywrappers module added, but not in global namespace
* Quantity comparison to zero doesn't check units (positivity/negativity)

New features since 1.0.0 beta 
-----------------------------

* Connection: connect_full allows a functional weight argument (like connect_random)
** Short-term plasticity **
  In Connection: 'modulation' argument allows modulating weights by a state
  variable from the source group (see examples).
* HomogeneousCorrelatedSpikeTrains: input spike trains with exponential correlations.
* Network.stop(): stops the simulation (can be called by a user script)
* PopulationRateMonitor: smooth_rate method
* Optimisation of Euler code: use compile=True when initialising NeuronGroup
* More examples
* Pickling now works (saving and loading states)
* dot(a,b) now works correctly with qarray's with homogeneous units
* Parallel simulations using Parallel Python (independent simulations only)
* Example of html inferfaces to Brian scripts using CherryPy
* Time dependence in equations (see phase_locking example)
* SpikeCounter and PopulationSpikeCounter